setwd("~/GitHub/upper_wolf_river_SWE")
sH <- read.csv("~/GitHub/upper_wolf_river_SWE/data/3B17P.csv", T, ",")
sR <- read.csv("~/GitHub/upper_wolf_river_SWE/data/3B17P_recent.csv", T, ",")
summary(sH)
require(lubridate)
install.packages("lubridate")
summary(sH)
summary(sH)
levels(sH$Code.3)
length(levels(sH$Code.3))[2]
length(levels(sH$Code.3))[1]
length(levels(sH$Code.3))[3]
length(levels(sH$Code.3))[[3]
]
str(levels(sH$Code.3))
nrow(sH$Code.3 == " ")
nrow(sH[sH$Code.3 == " ",])
levels(sH$Code.3)
nrow(sH[sH$Code.3 == "A",])
sHbak <- sH
sH <- sHbak
names(sH)
summary(sH)
sh <- read.csv("~/GitHub/upper_wolf_river_SWE/data/3B17P.csv", T, ",")
sr <- read.csv("~/GitHub/upper_wolf_river_SWE/data/3B17P_recent.csv", T, ",")
sHbak <- sH
sh <- read.csv("~/GitHub/upper_wolf_river_SWE/data/3B17P.csv", T, ",")
sr <- read.csv("~/GitHub/upper_wolf_river_SWE/data/3B17P_recent.csv", T, ",")
shbak <- sh
srbak <- sr
sH <- sHbak
rm(list = ls())
sh <- read.csv("~/GitHub/upper_wolf_river_SWE/data/3B17P.csv", T, ",")
sr <- read.csv("~/GitHub/upper_wolf_river_SWE/data/3B17P_recent.csv", T, ",")
shbak <- sh
srbak <- sr
sh <- sHbak
sh <- shbak
sr <- srbak
summary(sh)
summary(sh$Date)
require(lubridate)
sh$Date <- ymd(sh$Date)
summary(sh)
plot(sh$Date, sh$Precipitation)
plot(sh$Date, sh$Precipitation, type = "l")
sh <- sh[month(sh$Date == 7),]
sh <- sh[month(sh$Date) == 7,]
plot(sh$Date, sh$Precipitation, type = "l")
sh$YDAY <- yday(sh$Date)
summary(sh)
213-182
require(magrittr)
require(dplyr)
install.packages("dplyr")
require(dplyr)
julyAvg <- sh %>%
group_by(YDAY) %>%
summarise()
julyAvg
julyAvg <- sh %>%
group_by(YDAY) %>%
summarise(mean(.$Snow.Water.Equivalent))
summary(julyAvg)
julyAvg <- sh %>%
group_by(YDAY) %>%
summarise(mean(.$Snow.Water.Equivalent, na.rm = T))
summary(julyAvg)
julyAvg
julyAvg <- sh %>%
group_by(YDAY) %>%
summarise(., mean(Snow.Water.Equivalent))
julyAvg
julyAvg <- sh %>%
group_by(YDAY) %>%
summarise(., mean(Snow.Water.Equivalent, na.rm = T))
julyAvg
julyAvg <- sh %>%
group_by(YDAY) %>%
summarise(mean(Snow.Water.Equivalent, na.rm = T))
julyAvg
plot(julyAvg$YDAY, julyAvg$`mean(Snow.Water.Equivalent, na.rm = T)`)
plot(julyAvg$YDAY, julyAvg$`mean(Snow.Water.Equivalent, na.rm = T)`, type = "l")
sh <- merge(sh, julyAvg, by = YDAY)
sh <- merge(sh, julyAvg)
sh
sh
sh <- shbak
sr <- srbak
# parse date
sh$Date <- ymd(sh$Date)
# july as month of interest
sh <- sh[month(sh$Date) == 7,]
sh$YDAY <- yday(sh$Date)
julyAvg <- sh %>%
group_by(YDAY) %>%
summarise(mean(Snow.Water.Equivalent, na.rm = T))
sh <- shbak
summary(sh)
sh$Date <- ymd(sh$Date)
summary(sh)
sh <- sh[month(sh$Date) == 7,]
sh$YDAY <- yday(sh$Date)
summary(sh)
julyAvg <- sh %>%
group_by(YDAY) %>%
summarise(mean(Snow.Water.Equivalent, na.rm = T))
sh <- shbak
sh$Date <- ymd(sh$Date)
sh <- sh[month(sh$Date) == 7,]
sh$YDAY <- yday(sh$Date)
plot(sh$YDAY, sh$Snow.Water.Equivalent)
plot(sh$YDAY, sh$Snow.Water.Equivalent, col = sh$YDAY)
plot(sh$YDAY, sh$Snow.Water.Equivalent, col = year(sh$Date))
plot(sh$YDAY, sh$Snow.Water.Equivalent, col = year(sh$Date), type = "l")
plot(mday(sh$Date), sh$Snow.Water.Equivalent)
?par
plot(mday(sh$Date), sh$Snow.Water.Equivalent, type = "n")
for (i in years(sh$Date)){
lines(sh$Snow.Water.Equivalent[year(sh$Snow.Water.Equivalent) == i,])
}
for (i in years(sh$Date)){
lines(mday(sh$Date[year(sh$Snow.Water.Equivalent) == i]),
sh$Snow.Water.Equivalent[year(sh$Snow.Water.Equivalent) == i])
}
require(ggplot2)
install.packages("ggplot2")
require(ggplot2)
ggplot(sh, aes(mday(sh$Date), sh$Snow.Water.Equivalent)) +
geom_line() +
geom_point()
ggplot(sh, aes(sh$Date, sh$Snow.Water.Equivalent, colour = year(sh$Date))) +
geom_line() +
geom_point()
ggplot(sh, aes(yday(sh$Date), sh$Snow.Water.Equivalent, colour = year(sh$Date))) +
geom_line() +
geom_point()
ggplot(sh, aes(factor(yday(sh$Date)), sh$Snow.Water.Equivalent, colour = year(sh$Date))) +
geom_line() +
geom_point()
ggplot(sh, aes(factor(sh$Date), sh$Snow.Water.Equivalent, colour = year(sh$Date))) +
geom_line() +
geom_point()
ggplot(sh, aes(factor(year(sh$Date)), sh$Snow.Water.Equivalent, colour = year(sh$Date))) +
geom_line() +
geom_point()
ggplot(sh, aes(factor(mday(sh$Date)), sh$Snow.Water.Equivalent, colour = year(sh$Date))) +
geom_line() +
geom_point()
ggplot(sh, aes(sh$Snow.Water.Equivalent, factor(mday(sh$Date)), colour = year(sh$Date))) +
geom_line() +
geom_point()
?ggplot
require(lubridate)
require(magrittr)
require(dplyr)
require(ggplot2)
install.packages("ggplot2")
require(ggplot2)
install.packages("colorspace")
require(ggplot2)
rm(list = ls())
setwd("~/GitHub/upper_wolf_river_SWE")
# imports
require(lubridate)
require(magrittr)
require(dplyr)
require(ggplot2)
# read in data
sh <- read.csv("~/GitHub/upper_wolf_river_SWE/data/3B17P.csv", T, ",")
sr <- read.csv("~/GitHub/upper_wolf_river_SWE/data/3B17P_recent.csv", T, ",")
shbak <- sh
srbak <- sr
# start here
sh <- shbak
sr <- srbak
# parse date
sh$Date <- ymd(sh$Date)
# july as month of interest
sh <- sh[month(sh$Date) == 7,]
sh$YDAY <- yday(sh$Date)
julyAvg <- sh %>%
group_by(YDAY) %>%
summarise(mean(Snow.Water.Equivalent, na.rm = T))
?ggplot()
ggplot(sh, aes(x = mday(sh$Date), y = sh$Snow.Water.Equivalent)) +
geom_line() +
geom_point()
ggplot(sh, aes(x = mday(sh$Date), y = sh$Snow.Water.Equivalent, colour = year(sh$Date))) +
geom_line() +
geom_point()
ggplot(sh, aes(x = mday(sh$Date), y = sh$Snow.Water.Equivalent, colour = year(as.factor(sh$Date))) +
geom_line() +
geom_point()
9
ggplot(sh, aes(x = mday(sh$Date), y = sh$Snow.Water.Equivalent, colour = year(as.factor(sh$Date)))) +
geom_line() +
geom_point()
ggplot(sh, aes(x = mday(sh$Date), y = sh$Snow.Water.Equivalent, colour = year(sh$Date))) +
geom_line() +
geom_point()
ggplot(sh, aes(x = mday(sh$Date), y = sh$Snow.Water.Equivalent, colour = year(sh$Date))) +
geom_point()
setwd("~/GitHub/upper_wolf_river_SWE")
# imports
require(lubridate)
require(magrittr)
require(dplyr)
require(ggplot2)
# read in data
sh <- read.csv("~/GitHub/upper_wolf_river_SWE/data/3B17P.csv", T, ",")
sr <- read.csv("~/GitHub/upper_wolf_river_SWE/data/3B17P_recent.csv", T, ",")
shbak <- sh
srbak <- sr
# start here
sh <- shbak
sr <- srbak
# parse date
sh$Date <- ymd(sh$Date)
# july as month of interest
sh <- sh[month(sh$Date) == 7,]
sh$YDAY <- yday(sh$Date)
julyAvg <- sh %>%
group_by(YDAY) %>%
summarise(mean(Snow.Water.Equivalent, na.rm = T))
ggplot(sh, aes(x = mday(sh$Date), y = sh$Snow.Water.Equivalent, colour = year(sh$Date))) +
geom_point()
ggplot(sh, aes(x = mday(sh$Date), y = sh$Snow.Water.Equivalent, colour = year(sh$Date))) +
geom_point() +
geom_point(y = sh$Temp..Max.)
ggplot(sh, aes(x = sh$Date, y = sh$Snow.Water.Equivalent, colour = year(sh$Date)))
summary(sh)
plot(sh$Date, sh$Temp..Max.)
plot(sh$Date, sh$Snow.Water.Equivalent)
ggplot(sh, aes(x = sh$Date, y = sh$Snow.Water.Equivalent)) +
geom_point()
ggplot(sh, aes(x = yday(sh$Date), y = sh$Snow.Water.Equivalent)) +
geom_point()
ggplot(sh, aes(x = yday(sh$Date), y = sh$Temp..Max.)) +
geom_point() +
geom_point(y = sh$Temp..Min.)
ggplot(sh, aes(x = yday(sh$Date), y = sh$Temp..Max., colours(sh$YDAY))) +
geom_point() +
geom_point(y = sh$Temp..Min.)
ggplot(sh, aes(x = yday(sh$Date), y = sh$Temp..Max., colours(sh$YDAY))) +
geom_point() +
geom_point(aes(y = sh$Temp..Min.)
)
ggplot(sh, aes(x = yday(sh$Date))) +
geom_point()
ggplot(sh, aes(x = yday(sh$Date)))
geom_point(aes(y = sh$Temp..Min.))
ggplot(sh, aes(x = yday(sh$Date))) +
geom_point(aes(y = sh$Temp..Min.))
ggplot(sh, aes(x = yday(sh$Date))) +
geom_point(aes(y = sh$Temp..Min.)) +
geom_point(aes(y = sh$Temp..Max.))
ggplot(sh, aes(x = yday(sh$Date))) +
geom_point(aes(y = sh$Temp..Min.)) +
geom_line(aes(y = sh$Temp..Min.))
ggplot(sh, aes(x = yday(sh$Date))) +
geom_point(aes(y = sh$Temp..Min., colour = sh$Date))
ggplot(sh, aes(x = yday(sh$Date))) +
geom_point(aes(y = sh$Temp..Min., colour = sh$Date)) +
facet_wrap(month(sh$Date))
ggplot(sh, aes(x = yday(sh$Date))) +
geom_point(aes(y = sh$Temp..Min., colour = sh$Date)) +
facet_wrap(~month(sh$Date))
ggplot(sh, aes(x = yday(sh$Date))) +
geom_point(aes(y = sh$Temp..Min., colour = sh$Date)) +
facet_wrap(~sh$Date)
ggplot(sh, aes(x = yday(sh$Date))) +
geom_point(aes(y = sh$Temp..Min., colour = sh$Date)) +
facet_wrap(~unique(month(sh$Date)))
ggplot(sh, aes(x = yday(sh$Date))) +
geom_point(aes(y = sh$Temp..Min., colour = sh$Date))
ggplot(sh, aes(x = yday(sh$Date))) +
geom_point(aes(y = sh$Temp..Min., colour = yday(sh$Date)))
ggplot(sh, aes(x = yday(sh$Date))) +
geom_point(aes(y = sh$Temp..Min., colour = "red")
)
ggplot(sh, aes(x = yday(sh$Date))) +
geom_point(aes(y = sh$Temp..Min., colour = "blue")) +
geom_point(aes(y = sh$Temp..Max., colour = "red"))
ggplot(sh, aes(x = yday(sh$Date))) +
geom_point(aes(y = sh$Temp..Min., colour = "blue")) +
geom_point(aes(y = sh$Temp..Max., colour = "red"))
ggplot(sh, aes(x = yday(sh$Date))) +
geom_smooth(aes(y = sh$Temp..Min., colour = "blue")) +
geom_smooth(aes(y = sh$Temp..Max., colour = "red"))
ggplot(sh, aes(x = yday(sh$Date))) +
geom_smooth(aes(y = sh$Temp..Min., colour = "blue")) +
geom_smooth(aes(y = sh$Temp..Max., colour = "red")) +
geom_pointrange(aes(ymin = sh$Temp..Min., ymax = sh$Temp..Max.))
ggplot(sh, aes(x = yday(sh$Date))) +
geom_smooth(aes(y = sh$Temp..Min., colour = "blue"), level = 1) +
geom_smooth(aes(y = sh$Temp..Max., colour = "red"), level = 1) +
geom_pointrange(aes(ymin = sh$Temp..Min., ymax = sh$Temp..Max.))
ggplot(sh, aes(x = yday(sh$Date))) +
geom_smooth(aes(y = sh$Temp..Min., colour = "blue"), level = 1) +
geom_smooth(aes(y = sh$Temp..Max., colour = "red"), level = 1)
ggplot(sh, aes(x = yday(sh$Date))) +
geom_smooth(aes(y = sh$Temp..Min., colour = "blue"), level = 0.99) +
geom_smooth(aes(y = sh$Temp..Max., colour = "red"), level = 0.99)
ggplot(sh, aes(x = yday(sh$Date))) +
geom_smooth(aes(y = sh$Temp..Min., colour = "blue"), level = 0.999) +
geom_smooth(aes(y = sh$Temp..Max., colour = "red"), level = 0.999)
ggplot(sh, aes(x = yday(sh$Date))) +
geom_smooth(aes(y = sh$Temp..Min., colour = "blue")) +
geom_smooth(aes(y = sh$Temp..Max., colour = "red"), level = 0.999)
rm(list = ls())
setwd("~/GitHub/upper_wolf_river_SWE")
# imports
require(lubridate)
require(magrittr)
require(dplyr)
require(ggplot2)
# read in data
sh <- read.csv("~/GitHub/upper_wolf_river_SWE/data/3B17P.csv", T, ",")
sr <- read.csv("~/GitHub/upper_wolf_river_SWE/data/3B17P_recent.csv", T, ",")
shbak <- sh
srbak <- sr
# start here
sh <- shbak
sr <- srbak
# parse date
sh$Date <- ymd(sh$Date)
# july as month of interest
sh <- sh[month(sh$Date) == 7,]
sh$YDAY <- yday(sh$Date)
julyAvg <- sh %>%
group_by(YDAY) %>%
summarise(mean(Snow.Water.Equivalent, na.rm = T))
ggplot(sh, aes(x = yday(sh$Date), y = sh$Snow.Water.Equivalent)) +
geom_point()
ggplot(sh, aes(x = yday(sh$Date))) +
geom_point(aes(y = sh$Temp..Min., colour = "blue")) +
geom_point(aes(y = sh$Temp..Max., colour = "red"))
ggplot(sh, aes(x = yday(sh$Date))) +
geom_point(aes(y = sh$Temp..Min.), colour = "blue") +
geom_point(aes(y = sh$Temp..Max.), colour = "red")
ggplot(sh, aes(x = yday(sh$Date))) +
geom_point(aes(y = sh$Temp..Min.), colour = "blue") +
geom_point(aes(y = sh$Temp..Max.), colour = "red") +
geom_smooth(aes(y = sh$Temp..Min.), colour = "blue") +
geom_smooth(aes(y = sh$Temp..Max.) colour = "red")
)
ggplot(sh, aes(x = yday(sh$Date))) +
geom_point(aes(y = sh$Temp..Min.), colour = "blue") +
geom_point(aes(y = sh$Temp..Max.), colour = "red") +
geom_smooth(aes(y = sh$Temp..Min.), colour = "blue") +
geom_smooth(aes(y = sh$Temp..Max.) colour = "red"))
ggplot(sh, aes(x = yday(sh$Date))) +
geom_point(aes(y = sh$Temp..Min.), colour = "blue") +
geom_point(aes(y = sh$Temp..Max.), colour = "red") +
geom_smooth(aes(y = sh$Temp..Min.), colour = "blue") +
geom_smooth(aes(y = sh$Temp..Max.), colour = "red"))
ggplot(sh, aes(x = yday(sh$Date))) +
geom_point(aes(y = sh$Temp..Min.), colour = "blue") +
geom_point(aes(y = sh$Temp..Max.), colour = "red") +
geom_smooth(aes(y = sh$Temp..Min.), colour = "blue") +
geom_smooth(aes(y = sh$Temp..Max.), colour = "red")
yday(dmy("24/07/2017"))
ggplot(sh, aes(x = yday(sh$Date))) +
geom_point(aes(y = sh$Temp..Min.), colour = "blue") +
geom_point(aes(y = sh$Temp..Max.), colour = "red") +
geom_smooth(aes(y = sh$Temp..Min.), colour = "blue") +
geom_smooth(aes(y = sh$Temp..Max.), colour = "red") +
geom_vline(xintercept = 205) +
geom_vline(xintercept = 210)
shbak
summary(shbak)
a
a <- shbak
head(a$Date, 50)
a$Date <- ymd(a$Date)
summary(a)
